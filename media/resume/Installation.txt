***************************PART-1 INITIAL SETUP***********************
<>Install python(2.7)
<>Install pip("easy_intall pip")
<>Install Virtualenv
Please google around to get to know more about Python,pip,virtualenv and DJANGO!:) 
NOTE:
1.Start command prompt and activate virtualenv with `env\Scripts\activate`
BEFORE YOU INSTALL ANYTHING ELSE install python-mysql:
	(a) sudo apt-get install libmysqlclient-dev
	(b) sudo pip install mysql-python
2.Install the requitements `pip install -r requirements.txt`
  **NOTE** Remove MySQL-python==1.2.5 from the file and install it manually with easy_install MySQL-python==1.2.5 

***************************PART-2 THE DIRECTORY HIERARCHY***********************
This is my final directory structure:

mentorbuddy
├── mentorbuddy
│   ├── __init__.py
│   ├── settings.py
│   ├── urls.py
│   └── wsgi.py
├── apps
│   ├── __init__.py
│   └── mentor
│       ├── __init__.py
│       ├── admin.py
│       ├── models.py
│       ├── tests.py
│       └── views.py
│   └── mentee
│        ├── __init__.py
│        ├── admin.py.py
│        ├── models.py
│        ├── tests.py
│        ├── views.py
│   └── user
│        ├── __init__.py
│        ├── admin.py.py
│        ├── models.py
│        ├── tests.py
│        ├── views.py
├──static
├──templates
│
└── manage.py
--------------
SKIP THIS STEP:
---------------
No matter if you have just created your project or if you want to move your apps, create the apps subdirectory that should contain your apps. The trick is to add an __init__.py to that folder.

  mkdir apps
  touch apps/__init__.py
Now you can move your existing apps into the apps subdirectory. If you would like to create a new one instead here are the commands:

python manage.py mysecondapp
mv mentor apps/
Warning: Don't be tempted to call python manage.py ./apps/mentor. For some reason this deletes all other apps in that folder. I just lost a day of work this way.

Next, you will need to fix a few imports. Your settings.py should be prefixed with apps:

INSTALLED_APPS = (
    ...
    'apps.mentor',
    'apps.mentee'
)
Lastly, fix your project's urls.py to prefix apps:

urlpatterns = patterns('', 
  url(r'^menotr', include('apps.mentor.urls')),
  ...
)
Depending on how you wrote them, you might also have to fix a few imports inside your app. Either just use from models import MentorModel or also prefix it using from apps.mentor.models import MentorModel.

In short, if you make your apps directory a python module, you can use it as part of the import path. This should work regardless of the deployment method with no extra configuration.

******************PART-3-INSTALLING MYSQL****************************

1.Install XAMPP (we basically need phpmyadmin for convenience)

2.Create a database "mb_db2" in phpmyadmin

3.Select the database & click on Privileges tab.

4.Add a new user "mentorbuddy" with password-"mentorbuddy" and check the "Grant all privileges on wildcard name (username\_%)." checkbox.

5.Make sure you have installed MySQLdb driver with the following command 
		`easy_install MySQL-python==1.2.5` 
  !pip wont work

Linux users may have to find a work around :P